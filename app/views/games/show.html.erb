<div id="chess">
  <h1>Jedi Chess</h1>
    <table>
      <!-- create a 8x8 table using ruby loops, for each td tag, also insert the id with the position value such as a8, b6, c3..etc. The id will be used to insert the pieces later -->
      <% y_array = (1..8).to_a.reverse! %>
      <% y_array.each do |y_value| %>
        <%= content_tag "tr" do %>
          <% x_array = ('a'..'h').to_a %>
          <% x_array.each do |x_value| %>
            <% pos_id = x_value + y_value.to_s %>
            <%= content_tag "td", id: pos_id, class: "droppable" do %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    </table>
</div>



<!-- <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.4/jquery.min.js"></script> -->
<script>
  var pieces_hash = <%= raw @pieces_hash.to_json %>; //first convert a ruby hash to json format so js can utilize using .to_json

  for (key in pieces_hash) {
    pos_id = '#' + key
    piece_url = '/pieces/'+ pieces_hash[key][1]
    text = "<div id="+ Number(pieces_hash[key][1]) +" class=\"draggable " + pieces_hash[key][0] + " center-block\"></div>"
    
    // text = "<a href='"+ piece_url + "'><div data-item-id="+ Number(pieces_hash[key][1]) +" class=\"draggable " + pieces_hash[key][0] + " center-block\"></div></a>"

    $(pos_id).html(text) //this jquery finds each id tag with the value pos_id and insert the above <div class = 'color_type'></div> inside it so it gets inserted inside the td tag

  };

 

  $(function() {

    $( ".draggable" ).draggable({
      revert: 'invalid',
      drag: function( event, ui ) {}
    });

    $( ".droppable" ).droppable({
      tolerance: 'fit',
      drop: function( event, ui ) {
        var $this = $(this);
        ui.draggable.position({
          my: "center",
          at: "center",
          of: $this
          // using: function(pos) {
          //   $(this).animate(pos, 200, "linear");
          // }
        });

        //bind the droppable element to the new cell

        
        var droppable_id = '#' + $(this).attr("id");
        var draggable_id = '#' + $(ui.draggable).attr("id");
        var org_cell = $(draggable_id).parent();
        var org_position = org_cell.attr("id") //print d7

        var detached_draggable = $(draggable_id).detach();

        $(droppable_id).append(detached_draggable);

        $(draggable_id).attr("style", "position: relative;");

        var id = $(ui.draggable).attr("id");
        var dest_position = $(this).attr("id");
        var dest_x = dest_position.split('')[0];
        var dest_y = dest_position.split('')[1];
        var org_x = org_position.split('')[0];
        var org_y = org_position.split('')[1];
        // console.log("PieceID " + id + "PositionID" + position);

        $.ajax({ 
          url: "/pieces/"+id,
          type: "PUT",
          data: {

            'id': id,
            'dest_x': dest_x,
            'dest_y': dest_y,
            'org_x': org_x,
            'org_y': org_y
          },
          success: function(res){
            // debugger;
            //res should tell me which cell I need to update and with the information to update with <div id = '123' class="draggable black_queen center-block"></div>
            
            //case 1: only dest_cell -->move_to! returned success
            //case 2: only org_cell -->move_to! returned failure
            //res[0] will contain a location flag: 0->org cell update; 1->des cell update
            //res[1] will be the hash with the piece id, type, color 
            

            if (res[0]==0) {
              //update org cell 
              var org_cell_id = '#'+org_x+org_y;
              var org_piece_id = res[1][0]['org_piece_id'];
              var org_piece_class = res[1][0]['org_piece_color']+'_'+res[1][0]['org_piece_type'];
              var org_piece_div = "<div id="+org_piece_id+" class=\"draggable "+org_piece_class+" center-block\"></div>";

              $(org_cell_id).html(org_piece_div);
              

              //update dest_cell with the previous piece
              var dest_cell_id = '#'+dest_x+dest_y;
              var dest_piece_id = res[1][0]['dest_piece_id'];
              var dest_piece_class = res[1][0]['dest_piece_color']+'_'+res[1][0]['dest_piece_type'];
              var dest_piece_div = "<div id="+dest_piece_id+" class=\"draggable "+dest_piece_class+" center-block\"></div>";
              
              $(dest_cell_id).html(dest_piece_div);
              $('#'+dest_piece_id).draggable({
                revert: 'invalid',
                drag: function( event, ui ) {}
              });
              $('#'+org_piece_id).draggable({
                revert: 'invalid',
                drag: function( event, ui ) {}
              });
            }

            if (res[0]==1){
              //only update dest cell
              
              // var piece_id = res[1][0]['dest_piece_id'];
              // var piece_class = res[1][0]['dest_piece_color']+'_'+res[1][0]['dest_piece_type'];
              // var piece_div = "<div id="+piece_id+" class=\"draggable "+piece_class+" center-block\"></div>";
              // $(cell_id).html(piece_div);
              // $('#'+piece_id).draggable({
              //   revert: 'invalid',
              //   drag: function( event, ui ) {}
              // });

              var dest_cell_id = '#'+dest_x+dest_y;
              var dest_piece_id = '#'+res[1][0]['dest_piece_id'];
              var destinationPiece = $(dest_piece_id).detach();
              $(dest_cell_id)
                .empty()
                .append(destinationPiece);
              
            }

            
            
          }
        });

      }
    });
    

 
  });

</script>

